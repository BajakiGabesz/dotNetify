<VMContext VM="@VM" OnStateChange=@((object e) => { state = e; StateHasChanged(); })>
    @if(state != null)
    {
        <d-panel horizontal="true" css="@layoutCss" gap="10%">
            <d-panel css="@articleCss">
                @ChildContent
            </d-panel>
            <d-panel css="width: 16%">
                @if(!string.IsNullOrEmpty(Id))
                {
                    <d-panel css="@sidebarCss">
                        <d-markdown-toc id="@Id"></d-markdown-toc>
                    </d-panel>
                }
            </d-panel>
        </d-panel>
    }
</VMContext>

@code {
    [Parameter] public string VM { get; set; }
    [Parameter] public string Id { get; set; } = "Content";
    [Parameter] public RenderFragment ChildContent { get; set; }

    private object state;

    string layoutCss = @"
margin-left: 10%;
margin-right: 0;
max-width: 1268px;
@media (max-width: 1170px) {
margin-left: 2rem;
max-width: calc(100% - 2rem);
> *:last-child {
display: none;
}
}
@media (max-width: 414px) {
margin-left: 1rem;
max-width: calc(100% - 1rem);
}
";

    string articleCss = @"
max-width: calc(100% - 30rem);
min-width: 65%;
@media (max-width: 1170px) {
max-width: calc(100% - 2rem);
}
@media (max-width: 414px) {
max-width: calc(100% - 1rem);
}
";

    string sidebarCss = @"
position: fixed;
border-left: 1px solid orange;
margin-left: 2rem;
padding-left: 1rem;
p {
overflow: hidden;
text-overflow: ellipsis;
}
";
}